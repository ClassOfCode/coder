name: Test, Publish & Deploy

on:
  workflow_dispatch:
    inputs:
        Reason:
          description: 'Reason to use workflow_dispatch'     
          required: true
          default: 'Update to Newer Version'

  push:

  pull_request:
    branches:
      - main
    types: [opened, reopened]

env: 
  # TODO: Change variable to your image's name.
  IMAGE_NAME: "coder"

jobs:

  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
      name: Build the Docker image
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2

        - name: Run tests
          run: |
            if [ -f docker-compose.test.yml ]; then
              docker-compose --file docker-compose.test.yml build
              docker-compose --file docker-compose.test.yml run sut
            else
              docker build . --file Dockerfile
            fi

  push:
      name : Push to Github CR
      # Ensure test job passes before pushing image.
      needs: build

      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

      steps:
        - uses: actions/checkout@v2

        - name: Build image
          run: docker build . --file Dockerfile --tag $IMAGE_NAME

        - name: Log into registry
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

        - name: Push image
          run: |
            IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

            # Use Docker `latest` tag convention
            [ "$VERSION" == "main" ] && VERSION=latest

            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION

            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION


  push-ghcr:
    # Ensure test job passes before pushing image.
    name: Push Docker Container to GHCR
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo $CR_PAT | docker login ghcr.io -u USERNAME --password-stdin 


      - name: Push Docker image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION